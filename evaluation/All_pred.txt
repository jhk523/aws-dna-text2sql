SELECT product_id FROM Product_Suppliers ORDER BY total_amount_purchased DESC LIMIT 3;
SELECT product_id FROM Product_Suppliers ORDER BY total_amount_purchased DESC LIMIT 3;
SELECT product_id, product_type_code FROM Products ORDER BY product_price LIMIT 1;
SELECT product_id, product_type_code FROM Products ORDER BY product_price LIMIT 1;
SELECT COUNT(DISTINCT product_type_code) FROM Products
SELECT count(DISTINCT product_type_code) FROM Products
SELECT customer_address FROM Customers WHERE customer_id = 10;
SELECT c.customer_address FROM Customers c WHERE c.customer_id = 10 LIMIT 1;
SELECT s.staff_id, s.staff_gender FROM Staff s JOIN Staff_Department_Assignments sda ON s.staff_id = sda.staff_id WHERE sda.job_title_code = 'Department Manager'
SELECT s.staff_id, s.staff_gender FROM Staff s JOIN Staff_Department_Assignments sda ON s.staff_id = sda.staff_id WHERE sda.job_title_code = 'Department Manager'
SELECT payment_method_code, COUNT(*) AS num_customers FROM Customers GROUP BY payment_method_code;
SELECT payment_method_code, COUNT(*) AS num_customers FROM Customers GROUP BY payment_method_code
SELECT product_id, COUNT(*) AS order_count FROM Order_Items GROUP BY product_id ORDER BY order_count DESC LIMIT 1;
SELECT product_id FROM Order_Items GROUP BY product_id ORDER BY COUNT(*) DESC LIMIT 1;
SELECT customer_name, customer_phone, customer_email FROM Customers WHERE customer_id = (SELECT customer_id FROM Customer_Orders GROUP BY customer_id ORDER BY COUNT(order_id) DESC LIMIT 1);
SELECT customer_name, customer_phone, customer_email FROM Customers WHERE customer_id = (SELECT customer_id FROM Customer_Orders GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1);
SELECT product_type_code, AVG(product_price) AS avg_price FROM products GROUP BY product_type_code
SELECT product_type_code, AVG(product_price) AS avg_price FROM products GROUP BY product_type_code
SELECT COUNT(*) FROM Department_Stores WHERE dept_store_chain_id = (SELECT dept_store_chain_id FROM Department_Store_Chain WHERE dept_store_chain_name = 'South');
SELECT COUNT(*) FROM Department_Stores WHERE dept_store_chain_id = (SELECT dept_store_chain_id FROM Department_Store_Chain WHERE dept_store_chain_name = 'South');
SELECT s.staff_name, sda.job_title_code FROM Staff s JOIN Staff_Department_Assignments sda ON s.staff_id = sda.staff_id ORDER BY sda.date_assigned_from DESC LIMIT 1
SELECT s.staff_name, sda.job_title_code FROM Staff s JOIN Staff_Department_Assignments sda ON s.staff_id = sda.staff_id ORDER BY sda.date_assigned_from DESC LIMIT 1;
SELECT p.product_type_code, p.product_name, p.product_price FROM Products p JOIN Product_Suppliers ps ON p.product_id = ps.product_id WHERE ps.supplier_id = 3 ORDER BY p.product_price LIMIT 5;
SELECT p.product_type_code, p.product_name, p.product_price FROM Products p JOIN Product_Suppliers ps ON p.product_id = ps.product_id WHERE ps.supplier_id = 3 LIMIT 5;
SELECT DISTINCT c.customer_name FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id WHERE co.order_status_code = 'Pending' ORDER BY c.customer_id;
SELECT DISTINCT customer_name FROM Customers c JOIN Customer_Orders o ON c.customer_id = o.customer_id WHERE o.order_status_code = 'Pending' ORDER BY c.customer_id;
SELECT c.customer_name, c.customer_address FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id WHERE co.order_status_code IN ('New', 'PartFilled') GROUP BY c.customer_id HAVING COUNT(DISTINCT co.order_status_code) = 2;
SELECT c.customer_name, c.customer_address FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id WHERE co.order_status_code IN ('New', 'PartFilled') GROUP BY c.customer_id HAVING COUNT(DISTINCT co.order_status_code) = 2;
SELECT p.product_id FROM Products p JOIN Product_Suppliers ps ON p.product_id = ps.product_id WHERE ps.supplier_id = 2 AND p.product_price > (SELECT AVG(product_price) FROM Products) LIMIT 5
SELECT p.product_id FROM Products p INNER JOIN Product_Suppliers ps ON p.product_id = ps.product_id WHERE ps.supplier_id = 2 AND p.product_price > (SELECT AVG(product_price) FROM Products) LIMIT 5;
SELECT dept_store_id, store_name FROM Department_Stores WHERE dept_store_id IN (SELECT dept_store_id FROM Departments WHERE department_name = 'marketing') AND dept_store_id IN (SELECT dept_store_id FROM Departments WHERE department_name LIKE '%Manager%') LIMIT 1;
SELECT DISTINCT d.dept_store_id, ds.store_name FROM Departments d JOIN Department_Stores ds ON d.dept_store_id = ds.dept_store_id WHERE d.department_id IN (SELECT department_id FROM Departments WHERE department_name LIKE '%marketing%') AND d.department_id IN (SELECT department_id FROM Departments WHERE department_name LIKE '%manag%') LIMIT 5;
SELECT dept_store_chain_id FROM Department_Stores GROUP BY dept_store_chain_id ORDER BY COUNT(dept_store_id) DESC LIMIT 2;
SELECT dept_store_chain_id FROM Department_Stores GROUP BY dept_store_chain_id ORDER BY COUNT(*) DESC LIMIT 2;
SELECT department_id FROM departments d JOIN staff_department_assignments sda ON d.department_id = sda.department_id GROUP BY department_id ORDER BY COUNT(sda.staff_id) LIMIT 1;
SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY COUNT(*) LIMIT 1;
SELECT product_type_code, MAX(product_price) AS max_price, MIN(product_price) AS min_price FROM products GROUP BY product_type_code
SELECT product_type_code, MAX(product_price) AS max_price, MIN(product_price) AS min_price FROM products GROUP BY product_type_code
WITH avg_all_prices AS (SELECT AVG(product_price) AS avg_price FROM products) SELECT product_type_code FROM products GROUP BY product_type_code HAVING AVG(product_price) > (SELECT avg_price FROM avg_all_prices) LIMIT 1
SELECT product_type_code FROM products GROUP BY product_type_code HAVING AVG(product_price) > (SELECT AVG(product_price) FROM products)
SELECT s.staff_id, s.staff_name FROM Staff s JOIN Staff_Department_Assignments sda ON s.staff_id = sda.staff_id ORDER BY sda.date_assigned_to - sda.date_assigned_from LIMIT 1;
SELECT staff.staff_id, staff.staff_name FROM staff INNER JOIN staff_department_assignments ON staff.staff_id = staff_department_assignments.staff_id ORDER BY staff_department_assignments.date_assigned_from DESC LIMIT 1;
SELECT product_id, product_name FROM Products WHERE product_price BETWEEN 600.0000 AND 700.0000;
SELECT product_id, product_name FROM Products WHERE product_price BETWEEN 600 AND 700;
SELECT DISTINCT c.customer_id FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id WHERE co.order_date > (SELECT MAX(order_date) FROM Customer_Orders WHERE order_status_code = 'Cancelled')
SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date > (SELECT MAX(order_date) FROM Customer_Orders WHERE order_status_code = 'Cancelled')
SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_from < (SELECT MIN(date_assigned_from) FROM Staff_Department_Assignments WHERE job_title_code = 'Clerical Staff') AND job_title_code <> 'Clerical Staff' ORDER BY date_assigned_from LIMIT 1;
SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_from < (SELECT MIN(date_assigned_from) FROM Staff_Department_Assignments WHERE job_title_code = 'Clerical Staff') AND job_title_code <> 'Clerical Staff' ORDER BY date_assigned_from LIMIT 1;
SELECT customer_id, customer_name FROM Customers WHERE customer_address LIKE '%TN%'
SELECT customer_id, customer_name FROM Customers WHERE customer_address LIKE '%TN%'
SELECT staff_name, staff_gender FROM Staff WHERE staff_id IN (SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_from BETWEEN '2016-01-01' AND '2016-12-31');
SELECT s.staff_name, s.staff_gender FROM Staff s JOIN Staff_Department_Assignments sda ON s.staff_id = sda.staff_id WHERE sda.date_assigned_from BETWEEN '2016-01-01' AND '2016-12-31';
SELECT s.staff_name FROM Staff s INNER JOIN Staff_Department_Assignments sda ON s.staff_id = sda.staff_id GROUP BY s.staff_id HAVING COUNT(DISTINCT sda.job_title_code) > 1
SELECT s.staff_name FROM Staff s INNER JOIN Staff_Department_Assignments sda ON s.staff_id = sda.staff_id GROUP BY s.staff_id HAVING COUNT(DISTINCT sda.job_title_code) > 1
SELECT s.supplier_name, s.supplier_phone FROM Suppliers s JOIN Supplier_Addresses sa ON s.supplier_id = sa.supplier_id JOIN Addresses a ON sa.address_id = a.address_id ORDER BY a.address_details LIMIT 5;
SELECT s.supplier_name, s.supplier_phone FROM Suppliers s JOIN Supplier_Addresses sa ON s.supplier_id = sa.supplier_id JOIN Addresses a ON sa.address_id = a.address_id ORDER BY a.address_details LIMIT 5;
SELECT customer_phone FROM customers UNION ALL SELECT supplier_phone FROM suppliers;
SELECT customer_phone FROM customers UNION ALL SELECT supplier_phone FROM suppliers;
SELECT DISTINCT product_id FROM (SELECT product_id, COUNT(*) AS order_count FROM Order_Items GROUP BY product_id HAVING COUNT(*) > 3 UNION ALL SELECT product_id, 1 AS order_count FROM Product_Suppliers WHERE total_amount_purchased > 80000) tmp
SELECT DISTINCT product_id FROM Order_Items WHERE product_id IN (SELECT product_id FROM Order_Items GROUP BY product_id HAVING COUNT(*) > 3) UNION ALL SELECT product_id FROM Product_Suppliers WHERE total_amount_purchased > 80000;
SELECT product_id, product_name FROM Products WHERE product_price < 600 OR product_price > 900 LIMIT 5;
SELECT product_id, product_name FROM Products WHERE product_price < 600 OR product_price > 900 LIMIT 5;
SELECT supplier_id FROM (SELECT supplier_id, AVG(total_amount_purchased) AS avg_amount FROM product_suppliers GROUP BY supplier_id) WHERE avg_amount > 50000 OR avg_amount < 30000
SELECT supplier_id FROM product_suppliers GROUP BY supplier_id HAVING AVG(total_amount_purchased) > 50000 OR AVG(total_amount_purchased) < 30000
SELECT AVG(total_amount_purchased) AS avg_amount_purchased, AVG(total_value_purchased) AS avg_value_purchased FROM product_suppliers WHERE supplier_id = (SELECT supplier_id FROM product_suppliers GROUP BY supplier_id ORDER BY COUNT(product_id) DESC LIMIT 1);
SELECT AVG(total_amount_purchased) AS avg_total_amount_purchased, AVG(total_value_purchased) AS avg_total_value_purchased FROM product_suppliers WHERE supplier_id = (SELECT supplier_id FROM product_suppliers GROUP BY supplier_id ORDER BY COUNT(product_id) DESC LIMIT 1);
SELECT MAX(customer_code) AS largest_code, MIN(customer_code) AS smallest_code FROM Customers
SELECT MAX(customer_code) AS max_customer_code, MIN(customer_code) AS min_customer_code FROM Customers
SELECT DISTINCT c.customer_name FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id JOIN Order_Items oi ON co.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id WHERE p.product_name LIKE '%keyboard%'
SELECT DISTINCT customer_name FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id JOIN Order_Items oi ON co.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id WHERE p.product_name LIKE '%keyboard%'
SELECT DISTINCT s.supplier_name, s.supplier_phone FROM Suppliers s JOIN Product_Suppliers ps ON s.supplier_id = ps.supplier_id JOIN Products p ON ps.product_id = p.product_id WHERE p.product_name = 'red jeans'
SELECT DISTINCT s.supplier_name, s.supplier_phone FROM Suppliers s JOIN Product_Suppliers ps ON s.supplier_id = ps.supplier_id JOIN Products p ON ps.product_id = p.product_id WHERE p.product_name = 'red jeans'
SELECT product_type_code, MAX(product_price) AS max_price, MIN(product_price) AS min_price FROM products GROUP BY product_type_code ORDER BY product_type_code
SELECT product_type_code, MAX(product_price) AS max_price, MIN(product_price) AS min_price FROM products GROUP BY product_type_code ORDER BY product_type_code;
SELECT order_id, customer_id FROM Customer_Orders WHERE order_status_code = 'Cancelled' ORDER BY order_date;
SELECT order_id, customer_id FROM Customer_Orders WHERE order_status_code = 'Cancelled' ORDER BY order_date;
SELECT p.product_name FROM Products p INNER JOIN Order_Items oi ON p.product_id = oi.product_id INNER JOIN Customer_Orders co ON oi.order_id = co.order_id GROUP BY p.product_id HAVING COUNT(DISTINCT co.customer_id) >= 2 LIMIT 5;
SELECT DISTINCT p.product_name FROM Products p INNER JOIN Order_Items oi ON p.product_id = oi.product_id INNER JOIN Customer_Orders co ON oi.order_id = co.order_id GROUP BY p.product_name HAVING COUNT(DISTINCT co.customer_id) >= 2 LIMIT 5;
SELECT c.customer_name FROM Customers c INNER JOIN Customer_Orders co ON c.customer_id = co.customer_id INNER JOIN Order_Items oi ON co.order_id = oi.order_id GROUP BY c.customer_id HAVING COUNT(DISTINCT oi.product_id) >= 3
SELECT DISTINCT c.customer_name FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id JOIN Order_Items oi ON co.order_id = oi.order_id GROUP BY c.customer_id HAVING COUNT(DISTINCT oi.product_id) >= 3
SELECT s.staff_name, s.staff_gender FROM Staff s JOIN Staff_Department_Assignments sda ON s.staff_id = sda.staff_id WHERE sda.job_title_code = 'Sales Person' AND s.staff_id NOT IN (SELECT staff_id FROM Staff_Department_Assignments WHERE job_title_code = 'Clerical Staff')
SELECT s.staff_name, s.staff_gender FROM Staff s JOIN Staff_Department_Assignments sda ON s.staff_id = sda.staff_id WHERE sda.job_title_code = 'Sales Person' AND s.staff_id NOT IN (SELECT staff_id FROM Staff_Department_Assignments WHERE job_title_code = 'Clerical Staff') LIMIT 5;
SELECT customer_id, customer_name FROM Customers WHERE customer_address LIKE '%WY%' AND payment_method_code <> 'Credit Card'
SELECT customer_id, customer_name FROM Customers WHERE customer_address LIKE '%WY%' AND payment_method_code <> 'Credit Card'
SELECT AVG(product_price) FROM Products WHERE product_type_code = 'Clothes'
SELECT AVG(product_price) FROM Products WHERE product_type_code = 'Clothes'
SELECT product_name FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price DESC LIMIT 1;
SELECT product_name FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price DESC LIMIT 1;
